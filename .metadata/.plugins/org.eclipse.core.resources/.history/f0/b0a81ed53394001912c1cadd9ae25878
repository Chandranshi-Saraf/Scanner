package com.instasafe.nmapscanner;

import java.awt.EventQueue;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.awt.Toolkit;
import java.awt.GridBagLayout;
import javax.swing.UIManager;
import javax.swing.JLabel;
import java.awt.GridBagConstraints;
import javax.swing.JProgressBar;
import javax.swing.JButton;
import javax.swing.JRadioButton;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class startHere {

	private static JFrame frame;
	private ImageIcon image;
	private static JLabel label1;
	static JProgressBar progressBar=new JProgressBar(0); ;
	private static JButton btnStartDownloads;
	private static JRadioButton rdbtnNewRadioButton;
	private static JRadioButton rdbtnNewRadioButton_1;
	private static JTextField txtEnterHostTo;

	 static String property = "java.io.tmpdir";
	 static String tempDir = System.getProperty(property);
	

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					startHere window = new startHere();
					window.frame.setVisible(true);
				//	fill();
					
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	public startHere() throws Exception {
		initialize();
	
	}
	private void initialize() throws Exception {
		frame = new JFrame();
		frame.setAlwaysOnTop(true);
		frame.setBackground(UIManager.getColor("Button.light"));
		frame.setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\Chandranshi\\Documents\\Nmap Project\\NmapScanner\\instasafe-icon.png"));
		frame.setBounds(100, 100, 591, 383);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		image= new ImageIcon(getClass().getResource("/resources/instasafe-icon.png"));
		label1=new JLabel(image);
		label1.setBounds(0, 0, 122, 39);
		progressBar.setBounds(89, 88, 370, 21);
		progressBar.setValue(0); 
		progressBar.setStringPainted(true);	
		rdbtnNewRadioButton = new JRadioButton("All");
		
		rdbtnNewRadioButton.setBounds(247, 173, 40, 24);
		
		rdbtnNewRadioButton_1 = new JRadioButton("Top 100");
		rdbtnNewRadioButton_1.setBounds(291, 173, 70, 24);
		
		btnStartDownloads = new JButton("Start Downloads");
		
		btnStartDownloads.setBounds(190, 215, 171, 26);
		btnStartDownloads.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				try {
				
				start();
			}
				catch(Exception e1)
				{
					e1.printStackTrace();
				}
			}});
		
		JLabel lblNewLabel = new JLabel("Ports");
		lblNewLabel.setBounds(190, 177, 31, 16);
		frame.getContentPane().setLayout(null);
		frame.getContentPane().add(progressBar);
		frame.getContentPane().add(btnStartDownloads);
		frame.getContentPane().add(lblNewLabel);
		frame.getContentPane().add(rdbtnNewRadioButton);
		frame.getContentPane().add(rdbtnNewRadioButton_1);
		rdbtnNewRadioButton.setEnabled(false);
		rdbtnNewRadioButton_1.setEnabled(false);
		frame.getContentPane().add(label1);
		
		txtEnterHostTo = new JTextField();
		txtEnterHostTo.setForeground(Color.LIGHT_GRAY);
		txtEnterHostTo.setText("Enter Host to Scan");
		txtEnterHostTo.setBounds(190, 142, 171, 20);
		frame.getContentPane().add(txtEnterHostTo);
		txtEnterHostTo.setColumns(10);
		txtEnterHostTo.setEnabled(false);

		//fill();
	}
	
	public static void start() throws Exception
	{
		 Runnable runner = new Runnable()
		    {
		        public void run() {
		      try {
//		        	progressBar.setValue(50);
//		        	progressBar.repaint();
		        	Main.main(null);
		        	rdbtnNewRadioButton.setEnabled(true);
		    		rdbtnNewRadioButton_1.setEnabled(true);
		    		txtEnterHostTo.setEnabled(true);
		    		progressBar.setEnabled(false);
		    		rdbtnNewRadioButton.addActionListener(new ActionListener() {
		    			public void actionPerformed(ActionEvent e) {
		    				if(rdbtnNewRadioButton.isSelected())
		    	        		rdbtnNewRadioButton_1.setSelected(false);
		    	        	if(rdbtnNewRadioButton_1.isSelected())
		    	        		rdbtnNewRadioButton.setSelected(false);
		    			}
		    		});
		    		rdbtnNewRadioButton_1.addActionListener(new ActionListener() {
		    			public void actionPerformed(ActionEvent e) {
		    				if(rdbtnNewRadioButton.isSelected())
		    	        		rdbtnNewRadioButton_1.setSelected(false);
		    	        	if(rdbtnNewRadioButton_1.isSelected())
		    	        		rdbtnNewRadioButton.setSelected(false);
		    			}
		    		});
		        	btnStartDownloads.setText("Start Scan");
		        	btnStartDownloads.addActionListener(new ActionListener() {
		    			public void actionPerformed(ActionEvent e) {
		    				
		    				startScan sc = new startScan();
		    				try {
								sc.scan(tempDir);
							} catch (Exception e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							}
		    				//Main.deleteDirectory(Main.dir);

		    			}
		    		});
		        	
		        	
		        }catch(Exception e)
		        	{
		        	e.printStackTrace();
		        	}
		    }};
		    Thread t = new Thread(runner, "Code Executer");
		    t.start();
		
 
	}
	public static void fill(int num) throws Exception{

		        	progressBar.setValue(num);
	        		progressBar.repaint();
			
	}
}
